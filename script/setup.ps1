# setup.ps1

# Define the output path for the config file
$configFilePath = "../settings/config.ps1"

# Function to prompt for user input with a default value
function Prompt-UserInput($message, $default) {
    $input = Read-Host "$message [$default]"
    if ([string]::IsNullOrWhiteSpace($input)) {
        return $default
    }
    return $input
}


$parentFolder = Split-Path -Parent $PSScriptRoot

Write-Host "Configuration.  Press enter to accept default values." -ForegroundColor Green

# Collect user inputs for each variable, with default values provided
$deviceNamePattern = Prompt-UserInput "Enter Device Name Pattern" "*Kindle*"
$updateLogSeq = Prompt-UserInput "Add Notebooks to LogSeq" "Yes"
if ($updateLogSeq -eq "Yes") {
  $logSeqFolder = Prompt-UserInput "Enter LogSeq Graph Folder" "c:\LogSeq\"
  $gitLogSeq = Prompt-UserInput "Push logseq changes to git" "Yes"
}



Write-Host "!!!  WARNING !!!"  -ForegroundColor Red
Write-Host "!!!  These are advanced parameters, unless you know what you're doing, accept the defaults by pressing enter !!!"
Write-Host "!!!  WARNING !!!" -ForegroundColor Red
 
$notebooksFolderName = Prompt-UserInput "Enter Notebooks Folder Name" ".notebooks"
$internalStorageFolderName = Prompt-UserInput "Enter Internal Storage Folder Name" "Internal Storage"
$destinationPath = Prompt-UserInput "Enter Destination Path" "$parentFolder\exported_notebooks\"
$SourceFolder = Prompt-UserInput "Enter pdf storage Folder" "$parentFolder\pdf\"

$outputEpubDirectory = Prompt-UserInput "Enter epub storage Folder" "$parentFolder\epub\"
$guidPattern = Prompt-UserInput "Enter GUID Pattern" '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
$scriptPath = Prompt-UserInput "Enter Script Path" "$parentFolder\script\"
$nbkFileName = Prompt-UserInput "Enter NBK File Name" "nbk"
$calibrePath = Prompt-UserInput "Enter Path to Calibre Debug"  "C:\Program Files\Calibre2\calibre-debug.exe" 
$ebookConvertPath = Prompt-UserInput "Path to the ebook-convert executable" "C:\Program Files\Calibre2\ebook-convert.exe" # 
$pluginName = Prompt-UserInput "Name of the Calibre plugin to use" "KFX Input"  

if ($updateLogSeq -eq "Yes") {
$DestinationFolder = Prompt-UserInput "Enter Destination Folder" "D:\LogSeq\LogSeqPl\assets\pdf"
$logSeqPage = Prompt-UserInput "Enter Logseq Page Name for Scribe Notebooks " "Scribe Notebooks"
$MarkdownFile = Prompt-UserInput "Enter Logseq Page Name for Scribe Notebooks " "$logSeqFolder\pages\$logSeqPage.md"
$repoPath = Prompt-UserInput "Enter LogSeq Github Repository Path" "$logSeqFolder"
}
$settingsDirectory = "$parentFolder\settings\"

# Ensure the directory for the config file exists
$settingsFolder = Split-Path -Path $configFilePath -Parent
if (-not (Test-Path -Path $settingsFolder)) {
    New-Item -ItemType Directory -Path $settingsFolder -Force
}

# Write the user inputs to the config.ps1 file
@"
# Config file generated by setup.ps1
`$SourceFolder = "$SourceFolder"
`$DestinationFolder = "$DestinationFolder"
`$MarkdownFile = "$MarkdownFile"
`$repoPath = "$repoPath"
`$settingsDirectory = "$settingsDirectory"
`$outputEpubDirectory = "$outputEpubDirectory"
`$outputPdfDirectory = "$SourceFolder"
`$updateLogSeq = "$updateLogSeq"
`$gitLogSeq = "$gitLogSeq"
`$deviceNamePattern = "$deviceNamePattern"
`$internalStorageFolderName = "$internalStorageFolderName"
`$notebooksFolderName = "$notebooksFolderName"
`$nbkFileName = "$nbkFileName"
`$destinationPath = "$destinationPath"
`$guidPattern = '$guidPattern'
`$calibrePath = "$calibrePath"
`$ebookConvertPath = "$ebookConvertPath"
`$pluginName  = "$pluginName"
`$scriptPath = "$scriptPath"
"@ | Set-Content -Path $configFilePath

Write-Host "Configuration file has been created at $configFilePath" -ForegroundColor Green
